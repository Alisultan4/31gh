# Ваня идет поздней ночью по прямолинейной улице длины l, которая освещается n фонарями. Введём систему координат, в которой начало улицы соответствует точке 0, а её конец — точке l. Тогда i-й фонарь находится в точке ai. Фонарь освещает все точки улицы, которые находятся от него на расстоянии не больше d, где d — некоторое положительное число, общее для всех фонарей.

# Ваня хочет узнать, какой минимальный радиус освещения d должен быть у фонарей, чтобы вся улица была освещена.

# Входные данные
# В первой строке записаны два целых числа n, l (1 ≤ n ≤ 1000, 1 ≤ l ≤ 109) — количество фонарей и длина улицы соответственно.

# В следующей строке записано n целых чисел ai (0 ≤ ai ≤ l). Несколько фонарей могут находиться в одной точке. Фонари могут находиться в концах улицы.

# Выходные данные
# Выведите минимальный радиус освещения d, который необходим, чтобы осветить всю улицу. Ответ будет считаться правильным, если его абсолютная или относительная погрешность не превышает 10 - 9

n, l = map(int, input().split())
positions = sorted(list(map(int, input().split())))

def can_illuminate(d):
    # Проверяем, можно ли осветить всю улицу с текущим радиусом d
    for i in range(1, n):
        if positions[i] - positions[i-1] > 2*d:
            return False
    # Проверка для крайних фонарей
    if positions[0] > d or l - positions[-1] > d:
        return False
    return True

left, right = 0, l

while right - left > 1e-9:
    mid = (left + right) / 2
    if can_illuminate(mid):
        right = mid
    else:
        left = mid

print("{:.9f}".format(left))
